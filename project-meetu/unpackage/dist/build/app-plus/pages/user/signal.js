setCssToHead(["@charset \x22UTF-8\x22;\n#signalPage { overflow-y: scroll; }\n.",[1],"border-b { border: ",[0,2]," solid blue; }\n.",[1],"signal-wrap { height: calc(100% - ",[0,180],"); }\n.",[1],"signal-wrap .",[1],"panel-scroll-box { width: 100%; height: 100%; }\n.",[1],"signal-wrap .",[1],"cu-timeline { padding-top: ",[0,110],"; }\n.",[1],"signal-wrap wx-view.",[1],"signal_item { position: relative; display: -webkit-box; display: -webkit-flex; display: flex; -webkit-box-orient: vertical; -webkit-box-direction: normal; -webkit-flex-direction: column; flex-direction: column; }\n.",[1],"signal-wrap wx-view.",[1],"signal_item \x3e .",[1],"cu-time { position: absolute; top: ",[0,-36],"; padding: 0; font-size: ",[0,30],"; letter-spacing: ",[0,4],"; }\n.",[1],"signal-wrap wx-view.",[1],"signal_item \x3e .",[1],"cu-item { padding: 0 ",[0,40]," ",[0,50]," ",[0,200],"; }\n.",[1],"signal-wrap wx-view.",[1],"signal_item \x3e .",[1],"cu-item::before { left: ",[0,120],"; top: 0; }\n.",[1],"signal-wrap wx-view.",[1],"signal_item \x3e .",[1],"cu-item::after { left: ",[0,136],"; }\n.",[1],"signal-wrap wx-view.",[1],"signal_item \x3e .",[1],"cu-item .",[1],"content.",[1],"voice { padding: ",[0,20]," ",[0,40],"; display: -webkit-box; display: -webkit-flex; display: flex; -webkit-box-align: center; -webkit-align-items: center; align-items: center; border-radius: ",[0,500],"; }\n.",[1],"signal-wrap wx-view.",[1],"signal_item \x3e .",[1],"cu-item .",[1],"content.",[1],"voice .",[1],"voice_img { -webkit-box-flex: 1; -webkit-flex: 1; flex: 1; -webkit-box-pack: start; -webkit-justify-content: flex-start; justify-content: flex-start; }\n.",[1],"signal-wrap wx-view.",[1],"signal_item \x3e .",[1],"cu-item .",[1],"content.",[1],"voice .",[1],"voice_img wx-image { width: ",[0,76],"; height: ",[0,50],"; }\n.",[1],"signal-wrap wx-view.",[1],"signal_item \x3e .",[1],"cu-item .",[1],"action { padding: ",[0,20]," ",[0,20]," ",[0,30]," ",[0,10],"; }\n.",[1],"signal-wrap wx-view.",[1],"signal_item \x3e .",[1],"cu-item .",[1],"action wx-view { -webkit-box-flex: 1; -webkit-flex: 1; flex: 1; }\n.",[1],"signal-wrap wx-view.",[1],"signal_item \x3e .",[1],"cu-item .",[1],"action .",[1],"action_delete, .",[1],"signal-wrap wx-view.",[1],"signal_item \x3e .",[1],"cu-item .",[1],"action .",[1],"action_share { color: #DAB96B; }\n.",[1],"shareProvider { display: -webkit-box; display: -webkit-flex; display: flex; -webkit-box-orient: horizontal; -webkit-box-direction: normal; -webkit-flex-flow: row wrap; flex-flow: row wrap; }\n.",[1],"shareProvider .",[1],"shareProviderItem { -webkit-box-flex: 1; -webkit-flex: 1; flex: 1; display: -webkit-box; display: -webkit-flex; display: flex; -webkit-box-align: center; -webkit-align-items: center; align-items: center; -webkit-box-orient: vertical; -webkit-box-direction: normal; -webkit-flex-direction: column; flex-direction: column; }\n.",[1],"shareProvider .",[1],"shareProviderItem .",[1],"icon { background-color: #00bb31; color: #FFFFFF; width: ",[0,100],"; height: ",[0,100],"; line-height: ",[0,100],"; font-size: ",[0,70],"; border-radius: ",[0,500],"; }\n",],"Some selectors are not allowed in component wxss, including tag name selectors, ID selectors, and attribute selectors.(./pages/user/signal.wxss:100:14)",{path:"./pages/user/signal.wxss"})();
document.dispatchEvent(new CustomEvent("generateFuncReady", { detail: { generateFunc: $gwx('./pages/user/signal.wxml') } }));